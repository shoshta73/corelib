cmake_minimum_required(VERSION 3.22)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
include(set_build_type_defines)
include(options)

project(
    corelib
    DESCRIPTION "My collection of stuff that i commonly use."
    VERSION 0.0.0.0
    LANGUAGES CXX
)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_C_STANDARD 23)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_C_EXTENSIONS OFF)

if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang" OR CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wunused -Wfatal-errors -Werror -Wpedantic -pedantic")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Wunused -Wfatal-errors -Werror -Wpedantic -pedantic")
endif()

set(CORELIB_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(CORELIB_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)

file(GLOB_RECURSE CORELIB_SOURCES "${CORELIB_SOURCE_DIR}/*.cpp")
file(GLOB_RECURSE CORELIB_HEADERS "${CORELIB_INCLUDE_DIR}/*.hpp")

if(${CORELIB_BUILD_ONLY_SHARED_LIB})
	add_library(${PROJECT_NAME} SHARED ${CORELIB_SOURCES} ${CORELIB_HEADERS})
else()
	add_library(${PROJECT_NAME} STATIC ${CORELIB_SOURCES} ${CORELIB_HEADERS})
endif()
target_include_directories(${PROJECT_NAME} PUBLIC ${CORELIB_INCLUDE_DIR})
set_build_type_defines(${PROJECT_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES
	PREFIX ""
)

if(${CORELIB_BUILD_SHARED_LIB} AND NOT ${CORELIB_BUILD_ONLY_SHARED_LIB})
	add_library(${PROJECT_NAME}_shared SHARED ${CORELIB_SOURCES} ${CORELIB_HEADERS})
	target_include_directories(${PROJECT_NAME}_shared PUBLIC ${CORELIB_INCLUDE_DIR})
	set_build_type_defines(${PROJECT_NAME}_shared)
	set_target_properties(${PROJECT_NAME}_shared PROPERTIES
		OUTPUT_NAME ${PROJECT_NAME}
		PREFIX ""
	)
endif()

if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR})
	set(CORELIB_BUILD_EXAMPLES ON)
endif()

if(${CORELIB_BUILD_EXAMPLES})
	add_subdirectory(examples)
endif()
